cat("Purposive Sample Standard Error =  \t'", purposive_sample_se, "' \t and a \t",
"95% Confidence Interval between '", purposive_sample_lower_bound,"' and '", purposive_sample_upper_bound, "' \n")
cat("Simple Random Sample Standard Error =  \t'", srs_se, "' \t and a \t",
"95% Confidence Interval between '", srs_lower_bound,"' and '", srs_upper_bound, "' \n")
cat("Strata Sample Standard Error =  \t'", strata_se, "' \t and a \t",
"95% Confidence Interval between '", strata_lower_bound,"' and '", strata_upper_bound, "' \n")
cat("Purposive Sample 95% Confidence Interval between '", purposive_sample_lower_bound,"' and '", purposive_sample_upper_bound, "' \n")
cat("Simple Random Sample 95% Confidence Interval between '", srs_lower_bound,"' and '", srs_upper_bound, "' \n")
cat("Strata 95% Confidence Interval between '", strata_lower_bound,"' and '", strata_upper_bound, "' \n")
set.seed(1429226)
(srs <- sample(100,10))
rectanglenumbers=c(49, 78, 84, 38,  3, 37,  4, 88, 69, 40)
rectangle1<-27
rectangle2<-30
rectangle3<-4
rectangle4<-12
rectangle5<-35
rectangle6<-6
rectangle7<-10
rectangle8<-36
rectangle9<-8
rectangle10<-20
srs_data1<-data.frame(rectanglenumber=rectanglenumbers, area=c(rectangle1,rectangle2,rectangle3,rectangle4,rectangle5,rectangle6,rectangle7,rectangle8,rectangle9,rectangle10))
head(srs_data1)
cat("Real total number of small rectangles = '", 3079, "'\n",
"Estimated number of the total population = '", mean(srs_data1$area)*100, "' \n")
srs_se<-confidenceInterval(srs_data1)[1]
srs_lower_bound<-confidenceInterval(srs_data1)[2]
srs_upper_bound<-confidenceInterval(srs_data1)[3]
cat("Simple Random Sample Standard Error = '", srs_se, "' and a \n",
"95% Confidence Interval between '", srs_lower_bound,"' and '", srs_upper_bound, "' \n")
knitr::opts_chunk$set(echo = TRUE)
set.seed(01429226)
strata_data <- c(sample(small, floor(length(small)/10)+1), sample(large, floor(length(large)/10)))
strata_data
confidenceInterval(srs_data1)[3]
confidenceInterval(srs_data2)[3]
confidenceInterval(srs_data3)[3]
fit1 = aov(times ~ runner + path, data=data)
knitr::opts_chunk$set(echo = TRUE)
paths <- factor(rep(factor(c("round out","narrow angle","wide angle")),22))
runners<-factor(rep(1:22,each=3))
runner1<-c(5.40,5.50,5.55)
runner2<-c(5.85,5.70,5.75)
runner3<-c(5.20,5.60,5.50)
runner4<-c(5.55,5.50,5.40)
runner5<-c(5.90,5.85,5.70)
runner6<-c(5.45,5.55,5.60)
runner7<-c(5.40,5.40,5.35)
runner8<-c(5.45,5.50,5.55)
runner9<-c(5.25,5.15,5.35)
runner10<-c(5.85,5.80,5.00)
runner11<-c(5.25,5.20,5.70)
runner12<-c(5.65,5.55,5.10)
runner13<-c(5.60,5.35,5.45)
runner14<-c(5.05,5.00,5.45)
runner15<-c(5.50,5.50,5.95)
runner16<-c(5.45,5.55,5.40)
runner17<-c(5.55,5.55,5.50)
runner18<-c(5.45,5.50,5.35)
runner19<-c(5.50,5.45,5.25)
runner20<-c(5.65,5.60,5.45)
runner21<-c(5.70,5.65,5.55)
runner22<-c(6.30,6.30,6.25)
data<-data.frame(runner=runners,times=(c(runner1,runner2,runner3,runner4,runner5,runner6,
runner7,runner8,runner9,runner10,runner11,runner12,
runner13,runner14,runner15,runner16,runner17,runner18,
runner19,runner20,runner21,runner22)),path=paths)
#colnames(data)<-c("Runner","round out","narrow angle","wide angle")
head(data)
aggregate(times~path, data=data, mean)
par(mfrow=c(1,2))
boxplot(times ~ path , data = data, main = "Runners Time per Path",
xlab="Angle", ylab="Time (sec)",col="orange")
boxplot(data$times, ylim=c(5, 6.2), main="Mean Time of Runners", ylab="Time (sec)",col="orange")
library(daewr)
fit1 = aov(times ~ runner + path, data=data)
sfit1 = summary(fit1)
sfit1
TukeyHSD(fit1, "Path")
TukeyHSD(fit1, "path")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("nycflights13")
#install.packages("tidyverse")
#install.packages("rlang")
library(nycflights13)
library(nycflights13)
library(tidyverse)
library(dply)
library(dplyr)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("nycflights13")
#install.packages("tidyverse")
#install.packages("rlang")
library(nycflights13)
library(tidyverse)
library(dplyr)
# compute average arrival delay and sd by destination
fl_group <- group_by(flights, dest)
fl_descr <- summarise(fl_group,
avg_delay = mean(arr_delay, na.rm=T),
sd_delay = sd(arr_delay, na.rm=T),
max=max(arr_delay, na.rm=T),
count = sum(!is.na(arr_delay)))
arrange(fl_descr, desc(count), avg_delay)
?arrange
avg_delay
fl_descr
arrange(fl_descr, desc(count), avg_delay)
arrange(fl_descr, desc(count))
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
#install.packages("nycflights13")
#install.packages("rlang")
library(nycflights13)
library(tidyverse)
library(dplyr)
library(reshape)
names(tips)
head(tips)
tips.tib<-as.tibble(tips)
sub3<-sub2[-smoker]
sub1<-filter(tips,sex=Male&size>=3)
sub1<-filter(tips,sex==Male & size>=3)
sub1<-filter(tips,sex=="Male" & size>=3)
sub2<-filter(tips,sex=="Male"|size>=3)
sub3<-sub2[-smoker]
?select
sub3<-select(sub2,-smoker)
sort1<-arrange(sub3,time,desc(size))
sort1<-sort(sub3,time,desc(size))
summary(sort1,avg_tip_female=mean(tip),groupby(sex))
summary(sort1,avg_tip_female=mean(tip),group_by(sex))
summary(sort1,group_by(sex),avg_tip_female=mean(tip))
sort1%>%group_by(sex)%>%summary(avg_tip_female=mean(tip))
sort1%>%group_by(sex)%>%summary(avg_tip=mean(tip))
sort1%>%group_by(sex)%>%summary(avg_tip=mean(tip))
MEAN_tip<-sort1%>%group_by(sex)%>%summary(avg_tip=mean(tip))
MEAN_tip
sub1<-filter(tips,sex=="Male" & size>=3)
sub2<-filter(tips,sex=="Male"|size>=3)
sub3<-select(sub2,-smoker)
sort1<-arrange(sub3,time,desc(size))
MEAN_tip<-sort1%>%group_by(sex)%>%summarise(avg_tip=mean(tip))
sub1<-filter(tips,sex=="Male" & size>=3)
sub2<-
sub3<-select(sub2,-smoker)
sort1<-arrange(sub3,time,desc(size))
(MEAN_tip<-sort1%>%filter(sex=="Male"|size>=3)%>%select(-smoker)%>%group_by(sex)%>%summarise(avg_tip=mean(tip)))
sub1<-filter(tips,sex=="Male" & size>=3)
sub2<-filter(sex=="Male"|size>=3)
sub1<-filter(tips,sex=="Male" & size>=3)
sub2<-filter(tips,sex=="Male"|size>=3)
sub3<-select(sub2,-smoker)
sort1<-arrange(sub3,time,desc(size))
(MEAN_tip<-tips%>%filter(sex=="Male"|size>=3)%>%select(-smoker)%>%group_by(sex)%>%summarise(avg_tip=mean(tip)))
library(qcc)
install.packages("qcc")
#install.packages("qcc")
library(qcc)
head(boiler)
?bolier
?boiler
head(boiler)
data("boiler")
head(boiler)
?apply
#CLT
#generate a matrix with rows and columns
#each row is one sample. One sample consists of 30 datapoints
#generate from an Exponential (3) distribution
#step 1
rexp(30, rate=3)
#step2
mat <- matrix(rep(0,150), nrow=5)
for (i in (1:5))
{
mat[i,] <- rexp(30, rate=3)
}
mat
#step 3
# compute the average for every sample
all.sample.means <- apply(mat,1,mean)
#step 4
# create a histogram with the original data of 1st row
#and another histogram with the averages
par(mfrow=c(1,2))
hist(mat[1,],col="blue", main="Distribution of One Sample")
hist(all.sample.means, col="green", main="Sampling Distribution of
the Mean", prob=T)
lines(density(all.sample.means))
#step 5
# create a function out of this
clt_fun <- function(rpt = 5, n=30)
{
mat <- matrix(rep(0,n*rpt), nrow=rpt)
for (i in (1:rpt))
{
mat[i,] <- rexp(n, rate=3)
}
# compute the average for every sample
all.sample.means <- apply(mat,1,mean)
# create a histogram with the original data for 1st row
#and another histogram with the averages
par(mfrow=c(1,2))
hist(mat[1,],col="blue", main="Distribution of One Sample")
hist(all.sample.means, col="green", main="Sampling Distribution of
the Mean", prob=T)
lines(density(all.sample.means))
}
#step 6
clt_fun(rpt=500,n=30)
?rexp
search()
search(.GlobalEnv)
search()
seq(1,5,1)
setwd("C:/Users/marst/Dropbox/_KU Leuven Courses/Genetic Algorithms and Evolutionary Computing/Project/tsp_genetic_algorithms")
setwd("C:/Users/marst/Dropbox/_KU Leuven Courses/Genetic Algorithms and Evolutionary Computing/Project/tsp_genetic_algorithms")
data_task1<-read.table("template/results_ParameterTuning_Task1.csv", header=T)
data_task2<-read.table("template/results_ParameterTuning_Task2.csv", header=T)
head(data_task1)
dim(data_task1)
data_task1<-read.csv("template/results_ParameterTuning_Task1.csv", header=T)
data_task2<-read.csv("template/results_ParameterTuning_Task2.csv", header=T)
dim(data_task1)
library(tidyverse)
names(data_task1)
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode)%>%summarise(mean())
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode)%>%summarise(mean
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode)%>%summarise(mean)
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode)%>%summarise(mean)
%>%summarise(mean)
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode)
%>%summarise(mean(ShortestPath,na.rm=T))
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean(ShortestPath,na.rm=T))
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean(ShortestPath,na.rm=T))%>%arrange(asc(ShortestPath))
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean(ShortestPath,na.rm=T))%>%arrange(ShortestPath)
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T))%>%arrange(mean_ShortestPath)
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T))%>%arrange(mean_ShortestPath)
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task1_aggregated<-data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task1_aggregated[1:10]
data_task1_aggregated[1:10]
names(data_task1_aggregated)
data_task1_aggregated[1:10,:]
data_task1_aggregated[1:10;:]
data_task1_aggregated[1:10,]
names(data_task1)
data_task1_aggregated<-data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task1_aggregated[1:10,]
data_task2_aggregated<-data_task2%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task2_aggregated[1:10,]
names(data_task2_aggregated)
?t.test
data_task1[data_task1$CROSSOVER=='xalt_edges'&data_task1$NIND==128&data_task1$MAXGEN==100&data_task1$stoppingCriteria==1&data_task1$n_percentage==0.2&data_task1$delta==50]
data_task1[data_task1$NIND==128&data_task1$MAXGEN==100&data_task1$stoppingCriteria==1&data_task1$n_percentage==0.2&data_task1$delta==50]
data_task1[data_task1$NIND==128&data_task1$MAXGEN==100&data_task1$stoppingCriteria==1&data_task1$n_percentage==0.2&data_task1$delta==50,]
data_task1[data_task1$stoppingCriteria==1&data_task1$n_percentage==0.2&data_task1$delta==50,]
data_task1$stoppingCriteria==1&data_task1$n_percentage==0.2&data_task1$delta==50
data_task1[data_task1$stoppingCriteria==1]
data_task2[data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50]
data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50]
data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50]
data_task2_aggregated<-data_task2%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task2_aggregated[1:10,]
data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50]
data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50]
data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50,]
data_task1_aggregated<-data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task1_aggregated[1:10,]
names(data_task1_aggregated)
x=data_task1[data_task1$NIND==128&data_task1$MAXGEN==100&data_task1$ELITIST==0.05&data_task2$PR_CROSS==0.05&data_task2$PR_MUT==0.95,]
x=data_task1[data_task1$NIND==128&data_task1$MAXGEN==100&data_task1$ELITIST==0.05&data_task1$PR_CROSS==0.05&data_task1$PR_MUT==0.95,]
y=data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50,]
t.test(x,y,paired = T)
x=data_task1[data_task1$NIND==128&data_task1$MAXGEN==100&data_task1$ELITIST==0.05&data_task1$PR_CROSS==0.05&data_task1$PR_MUT==0.95,'ShortestPath']
y=data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50,'ShortestPath']
t.test(x,y,paired = T)
wilcox.test(x,y,paired = T)
?aov
?anova
data_task3_adj_aggregated<-data_task3_adj%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task3_adj_aggregated[1:10,]
names(data_task3_adj_aggregated)
data_task3_adj<-read.csv("template/results_ParameterTuning_Task3_adj.csv", header=T)
data_task3_path<-read.csv("template/results_ParameterTuning_Task3_path.csv", header=T)
data_task3_adj_aggregated<-data_task3_adj%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task3_adj_aggregated[1:10,]
names(data_task3_adj_aggregated)
data_task3_path_aggregated<-data_task3_path%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task3_path_aggregated[1:10,]
names(data_task3_path_aggregated)
data_task3_adj_aggregated<-data_task3_adj%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task3_adj_aggregated[1:10,]
names(data_task3_adj_aggregated)
data_task3_path_aggregated<-data_task3_path%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task3_path_aggregated[1:10,]
names(data_task3_path_aggregated)
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,'ShortestPath']
z=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
t.test(x,z,paired = T)
wilcox.test(x,z,paired = T)
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,'ShortestPath']
y=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
t.test(x,z,paired = T)
wilcox.test(x,z,paired = T)
x
y
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,]
z
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$MutationMethode=='inversion'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,'ShortestPath']
y=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
z
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$MutationMethode=='inversion'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,]
z
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$InitializationMethode==2&data_task3_adj$MutationMethode=='inversion'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,]
y=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&&data_task3_path$InitializationMethode==2&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
y=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&&data_task3_path$InitializationMethode==1&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
y=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&&data_task3_path$InitializationMethode==1&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
y=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
y=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$InitializationMethode==2&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
t.test(x,z,paired = T)
wilcox.test(x,z,paired = T)
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$InitializationMethode==2&data_task3_adj$MutationMethode=='inversion'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,'ShortestPath']
y=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$InitializationMethode==2&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
t.test(x,z,paired = T)
wilcox.test(x,z,paired = T)
t.test(x,y,paired = T)
wilcox.test(x,y,paired = T)
x=data_task1[data_task1$NIND==128&data_task1$MAXGEN==100&data_task1$ELITIST==0.05&data_task1$PR_CROSS==0.05&data_task1$PR_MUT==0.95,'ShortestPath']
y=data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50,'ShortestPath']
t.test(x,y,paired = T)
wilcox.test(x,y,paired = T)
data_task1_aggregated<-data_task1%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task1_aggregated[1:10,]
names(data_task1_aggregated)
data_task4<-read.csv("template/results_ParameterTuning_Task4.csv", header=T)
head(data_task4)
data_task3_adj_aggregated<-data_task3_adj%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns)) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task3_adj_aggregated[1:10,]
names(data_task3_adj_aggregated)
data_task4<-read.csv("template/results_ParameterTuning_Task4.csv", header=T)
head(data_task4)
data_task4_aggregated<-data_task4%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns)) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task4_aggregated[1:10,]
names(data_task4_aggregated)
data_task4_aggregated<-data_task4%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns))+
%>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))+
%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task4_aggregated<-data_task4%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns))%>%
summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%
filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task4_aggregated[1:10,]
data_task4_aggregated<-data_task4%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns))%>%
summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%
filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task4_aggregated[1:10,]
names(data_task4_aggregated)
w=data_task4[data_task4$CROSSOVER=='uhx'&data_task4$InitializationMethode==2&
data_task4$MutationMethode=='reciprocal_exchange'&data_task4$NIND==300&
data_task4$MAXGEN==300&data_task4$ELITIST==0.05&data_task4$PR_CROSS==0.7&
data_task4$PR_MUT==0.15,'ShortestPath']
t.test(x,w,paired = T)
wilcox.test(x,w,paired = T)
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$InitializationMethode==2&data_task3_adj$MutationMethode=='inversion'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,'ShortestPath']
v=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$InitializationMethode==2&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
t.test(x,z,paired = T)
wilcox.test(x,z,paired = T)
t.test(x,v,paired = T)
wilcox.test(x,v,paired = T)
w=data_task4[data_task4$CROSSOVER=='uhx'&data_task4$InitializationMethode==2&
data_task4$MutationMethode=='reciprocal_exchange'&data_task4$NIND==300&
data_task4$MAXGEN==300&data_task4$ELITIST==0.05&data_task4$PR_CROSS==0.7&
data_task4$PR_MUT==0.15,'ShortestPath']
t.test(x,w,paired = T)
wilcox.test(x,w,paired = T)
data_task5_1<-read.csv("template/results_ParameterTuning_Task5_d131.csv", header=T)
head(data_task5_1)
data_task5_1_aggregated<-data_task5_1%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns))%>%
summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%
filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task5_1_aggregated[1:10,]
names(data_task5_1_aggregated)
t.test(x,data_task5_1,paired = T)
wilcox.test(x,data_task5_1,paired = T)
wilcox.test(x,data_task5_1$ShortestPath,paired = T)
t.test(x,data_task5_1$ShortestPath,paired = T)
head(data_task5_1)
data_task5_1<-read.csv("template/results_ParameterTuning_Task5_d131.csv", header=T)
data_task5_1_SGA<-read.csv("template/results_ParameterTuning_Task5_SGA_d1.csv", header=T)
t.test(x,data_task5_1$ShortestPath,paired = T)
wilcox.test(data_task5_1_SGA$ShortestPath,data_task5_1$ShortestPath,paired = T)
data_task5_1<-read.csv("template/results_ParameterTuning_Task5_d131.csv", header=T)
data_task5_1_SGA<-read.csv("template/results_ParameterTuning_Task5_SGA_d131.csv", header=T)
t.test(data_task5_1_SGA$ShortestPath,data_task5_1$ShortestPath,paired = T)
wilcox.test(data_task5_1_SGA$ShortestPath,data_task5_1$ShortestPath,paired = T)
data_task5_2<-read.csv("template/results_ParameterTuning_Task5_d380.csv", header=T)
data_task5_2_SGA<-read.csv("template/results_ParameterTuning_Task5_SGA_d380.csv", header=T)
t.test(data_task5_2_SGA$ShortestPath,data_task5_2$ShortestPath,paired = T)
wilcox.test(data_task5_2_SGA$ShortestPath,data_task5_2$ShortestPath,paired = T)
data_task5_3<-read.csv("template/results_ParameterTuning_Task5_d662.csv", header=T)
data_task5_3_SGA<-read.csv("template/results_ParameterTuning_Task5_SGA_d662.csv", header=T)
t.test(data_task5_3_SGA$ShortestPath,data_task5_3$ShortestPath,paired = T)
wilcox.test(data_task5_3_SGA$ShortestPath,data_task5_3$ShortestPath,paired = T)
data_task5_4<-read.csv("template/results_ParameterTuning_Task5_d711.csv", header=T)
data_task5_4_SGA<-read.csv("template/results_ParameterTuning_Task5_SGA_d711.csv", header=T)
t.test(data_task5_4_SGA$ShortestPath,data_task5_4$ShortestPath,paired = T)
wilcox.test(data_task5_4_SGA$ShortestPath,data_task5_4$ShortestPath,paired = T)
mean(data_task5_1_SGA$ShortestPath)
mean(data_task5_1_SGA$Time)
y
t.test(x,y,paired = T)
mean(y)
y=data_task2[data_task2$NIND==128&data_task2$MAXGEN==100&data_task2$stoppingCriteria==1&data_task2$n_percentage==0.2&data_task2$delta==50,'Time']
mean(y)
data_task3_adj<-read.csv("template/results_ParameterTuning_Task3_adj.csv", header=T)
data_task3_path<-read.csv("template/results_ParameterTuning_Task3_path.csv", header=T)
data_task3_adj_aggregated<-data_task3_adj%>%group_by(CROSSOVER,NIND ,MAXGEN,ELITIST,PR_CROSS,PR_MUT,stoppingCriteria,n_percentage,delta,InitializationMethode,RepresentationMethode) %>%summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task3_adj_aggregated[1:10,]
names(data_task3_adj_aggregated)
ShortestPath
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$InitializationMethode==2&data_task3_adj$MutationMethode=='inversion'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,'ShortestPath']
z
mean(z)
t.test(x,z,paired = T)
z=data_task3_adj[data_task3_adj$CROSSOVER=='x_orderx'&data_task3_adj$InitializationMethode==2&data_task3_adj$MutationMethode=='inversion'&data_task3_adj$NIND==300&data_task3_adj$MAXGEN==300&data_task3_adj$ELITIST==0.05&data_task3_adj$PR_CROSS==0.65&data_task3_adj$PR_MUT==0.3,'Time']
mean(z)
v=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$InitializationMethode==2&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'ShortestPath']
t.test(x,v,paired = T)
mean(v)
v
v=data_task3_path[data_task3_path$CROSSOVER=='x_orderx'&data_task3_path$InitializationMethode==2&data_task3_path$MutationMethode=='inversion'&data_task3_path$NIND==300&data_task3_path$MAXGEN==300&data_task3_path$ELITIST==0.1&data_task3_path$PR_CROSS==0.7&data_task3_path$PR_MUT==0.3,'Time']
mean(v)
data_task4<-read.csv("template/results_ParameterTuning_Task4.csv", header=T)
head(data_task4)
data_task4_aggregated<-data_task4%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns))%>%
summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%
filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task4_aggregated[1:10,]
names(data_task4_aggregated)
w=data_task4[data_task4$CROSSOVER=='uhx'&data_task4$InitializationMethode==2&
data_task4$MutationMethode=='reciprocal_exchange'&data_task4$NIND==300&
data_task4$MAXGEN==300&data_task4$ELITIST==0.05&data_task4$PR_CROSS==0.7&
data_task4$PR_MUT==0.15,'ShortestPath']
t.test(x,w,paired = T)
wilcox.test(x,w,paired = T)
min(q)
min(w)
mean(w)
w=data_task4[data_task4$CROSSOVER=='uhx'&data_task4$InitializationMethode==2&
data_task4$MutationMethode=='reciprocal_exchange'&data_task4$NIND==300&
data_task4$MAXGEN==300&data_task4$ELITIST==0.05&data_task4$PR_CROSS==0.7&
data_task4$PR_MUT==0.15,'time']
mean(w)
w=data_task4[data_task4$CROSSOVER=='uhx'&data_task4$InitializationMethode==2&
data_task4$MutationMethode=='reciprocal_exchange'&data_task4$NIND==300&
data_task4$MAXGEN==300&data_task4$ELITIST==0.05&data_task4$PR_CROSS==0.7&
data_task4$PR_MUT==0.15,'Time']
mean(w)
data_task6<-read.csv("template/results_ParameterTuning_Task6_2.csv", header=T)
head(data_task4)
data_task6_aggregated<-data_task6%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns))%>%
summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%
filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
data_task6_aggregated[1:10,]
names(data_task6_aggregated)
u=data_task6[data_task6$CROSSOVER=='uhx'&data_task6$InitializationMethode==2&
data_task6$MutationMethode=='reciprocal_exchange'&data_task6$NIND==300&
data_task6$MAXGEN==300&data_task6$ELITIST==0.05&data_task6$PR_CROSS==0.7&
data_task6$PR_MUT==0.15,'Time']
t.test(x,u,paired = T)
wilcox.test(x,u,paired = T)
data_task6_aggregated[1:10,]
names(data_task6_aggregated)
data_task6_aggregated<-data_task6%>%group_by_at(vars(-Generations,-ShortestPath,-Time,-NumberOfRuns))%>%
summarise(mean_ShortestPath=mean(ShortestPath,na.rm=T),mean_Generations=mean(Generations))%>%
filter(mean_ShortestPath>0)%>%arrange(mean_ShortestPath)
View(data_task6_aggregated)
View(data_task6_aggregated)
data_task6_aggregated[1:10,]
u=data_task6[data_task6$CROSSOVER=='uhx'&data_task6$InitializationMethode==2&
data_task6$MutationMethode=='inversion'&data_task6$NIND==300&
data_task6$MAXGEN==100&data_task6$ELITIST==0.05&data_task6$PR_CROSS==0.7&
data_task6$PR_MUT==0.3,data_task6$q==5,'Time']
u=data_task6[data_task6$CROSSOVER=='uhx'&data_task6$InitializationMethode==2&
data_task6$MutationMethode=='inversion'&data_task6$NIND==300&
data_task6$MAXGEN==100&data_task6$ELITIST==0.05&data_task6$PR_CROSS==0.7&
data_task6$PR_MUT==0.3&data_task6$q==5,'Time']
u=data_task6[data_task6$CROSSOVER=='uhx'&data_task6$InitializationMethode==2&
data_task6$MutationMethode=='inversion'&data_task6$NIND==300&
data_task6$MAXGEN==100&data_task6$ELITIST==0.05&data_task6$PR_CROSS==0.7&
data_task6$PR_MUT==0.3&data_task6$q==5,]
u
data_task6_aggregated[1:10,]
u=data_task6[data_task6$CROSSOVER=='uhx'&data_task6$InitializationMethode==2&
data_task6$MutationMethode=='inversion'&data_task6$NIND==300&
data_task6$MAXGEN==100&data_task6$ELITIST==0.05&data_task6$PR_CROSS==0.7&
data_task6$PR_MUT==0.3&data_task6$q==5&data_task6$SurvivalMethode==1,'ShortestPath']
u
t.test(x,u,paired = T)
t.test(x,w,paired = T)
t.test(x,u,paired = T)
min(u)
mean(u)
u=data_task6[data_task6$CROSSOVER=='uhx'&data_task6$InitializationMethode==2&
data_task6$MutationMethode=='inversion'&data_task6$NIND==300&
data_task6$MAXGEN==100&data_task6$ELITIST==0.05&data_task6$PR_CROSS==0.7&
data_task6$PR_MUT==0.3&data_task6$q==5&data_task6$SurvivalMethode==1,'Time']
mean(u)
